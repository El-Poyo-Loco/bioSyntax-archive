%YAML 1.2
---
name: fastq
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions: [fastq, fq]
scope: source.fastq


contexts:
  main:
    # Match the comment line "+"
    #this doesn't work if there is text after the + sign
    #turns the 3rd line of FASTQ into a commment shade
    - match: "^\\+$"
      scope: comment.line

    #positive lookbehind to match a + and a new line to any characters right after it
    #pushes it to quality
    - match: "(?<=\\+\n).*"
      scope: entity.name
      push: quality

    - match: "^A"
      scope: nt.A
      push: nt

    - match: "^C"
      scope: nt.C
      push: nt

    - match: "^G"
      scope: nt.G
      push: nt

    - match: "^T"
      scope: nt.T
      push: nt

    #takes any lines with only ACGT and pushes it to nt
    - match: "[ACGT]"
      scope: entity.name
      push: nt

    #takes any lines that start with @ and pushes it to id
    #- match: ^@.*\s\b
    - match: "^@{1,2}.*"
      scope: header.id
      push: id


  # prototype:
  #   - include: nt


  #takes anything that starts with @ and until the end of the line, turns it green
  id:
    - meta_scope: name.id
    - match: "@"
      scope: invalid
    - match: "[@]"
      scope: invalid
    - match: $
      scope: constant.character.escape
      pop: true


  #anything that is pushed here will all be turned one colour
  # Complete Phred Scale
  #!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~

  # Illumina 1.8 Scale (IMPLEMENTED)
  # 0.2.......................26...31.......41     
  # !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKL
  # |   |   |   |   |   |   |   |   |   |   | ...

  quality:
    # - clear_scopes: true
    #- meta_include_prototype: false
    - meta_scope: comment.line
    - match: "[\\!\\#\\$\"]"
      scope: grad.bw0
    - match: "[%\\&\\'\\(]"
      scope: grad.bw1
    - match: "[\\)\\*\\+\\,]"
      scope: grad.bw2
    - match: "[\\-\\.\\/0]"
      scope: grad.bw3
    - match: "[1-4]"
      scope: grad.bw4
    - match: "[5-8]"
      scope: grad.bw5
    - match: "[9\\:\\;\\<]"
      scope: grad.bw6
    - match: "[\\=\\>\\?\\@]"
      scope: grad.bw7
    - match: "[ABCD]"
      scope: grad.bw8
    - match: "[EFGHIJ]"
      scope: grad.bw9
    - match: "[K-Z\\[\\\\]"
      scope: grad.bw10
    - match: "[\\]\\^\\_\\`a-f]"
      scope: grad.bw10
    - match: "[g-p]"
      scope: grad.bw10
    - match: "[q-z]"
      scope: grad.bw10
    - match: "[\\{\\|\\}\\~]"
      scope: grad.bw10
    - match: $
      scope: constant.character.escape
      pop: true

    # # Total Scale (DEPRECATED)
    # - match: "[\\!\\#\\$\\%\\&\\'\\(\\)\\*]"
    #   scope: grad0
    # - match: '"'
    #   scope: grad0
    # - match: "[\\+\\,\\-\\.\\/0-4]"
    #   scope: grad1
    # - match: "[5-9\\:\\;\\<\\=\\>]"
    #   scope: grad2
    # - match: "[\\?\\@A-H]"
    #   scope: grad3
    # - match: "[I-R]"
    #   scope: grad4
    # - match: "[S-Z\\[\\\\]"
    #   scope: grad5
    # - match: "[\\]\\^\\_\\`a-f]"
    #   scope: grad6
    # - match: "[g-p]"
    #   scope: grad7
    # - match: "[q-z]"
    #   scope: grad8
    # - match: "[\\{\\|\\}\\~]"
    #   scope: grad9
    # - match: $
    #   scope: constant.character.escape
    #   pop: true

  #nt takes the lines from only ACGT and then assigns a colour to each letter #the last match is to see if it ends at the line, if so, then pop.
  nt:
    #- meta_content_scope: entity.name
    - match: "[Aa]"
      scope: nt.A
    - match: "[Gg]"
      scope: nt.G
    - match: "[Cc]"
      scope: nt.C
    - match: "[Tt]"
      scope: nt.T
    - match: $
      scope: constant.character.escape
      pop: true
