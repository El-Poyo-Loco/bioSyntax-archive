%YAML 1.2
---
name: PDB
# YAML for PDB files
file_extensions: [pdb]
scope: source.pdb
contexts:
  main:
    #Header line
    - match: '^HEADER.*$'
      scope: invalid.pdb

    #Title line
    - match: '^TITLE.*$'
      scope: constant.character.pdb

    #COMPND line
    - match: '^COMPND.*$'
      scope: markup.deleted.pdb

    #SOURCE line
    - match: '^SOURCE.*$'
      scope: constant.language.pdb

    #KEYWDS line
    - match: '^KEYWDS.*$'
      scope: entity.name.pdb

    #EXPDTA line
    - match: '^EXPDTA.*$'
      scope: storage.type.pdb

    #AUTHOR line
    - match: '^AUTHOR.*$'
      scope: string.pdb

    #REVDAT line
    - match: "^REVDAT.*$"
      scope: constant.character.pdb

    #JRNL section
    - match: '^JRNL.*$'
      push: journal

    #REMARK section
    - match: '^REMARK[\s\t]+[0-9]+'
      push: remark

    #SEQRES section
    - match: '^SEQRES'
      #scope: storage.type.pdb
      push: seqres

    #HELIX section
    - match: "^HELIX.*$"
      scope: storage.type.pdb

    #HELIX section
    - match: "^SHEET.*$"
      scope: entity.name.tag.pdb

    #SITE section
    - match: "^SITE.*$"
      scope: string.pdb

    #ATOM section
    - match: '^(ATOM|ANISOU)[\s\t]+[0-9]+[\s\t]+[A-Z0-9]+'
      #scope: constant.character.pdb
      push: atom

    #HETATM section
    - match: "^HETATM.*$"
      scope: markup.deleted.pdb

  journal:
    - meta_scope: string.pdb #colour everything in this section
    - match: '[\s\t]+TITL\b.*'
      scope: entity.name.pdb #colour the title of the paper
    - match: '(?!JRNL\b)\b.*' #when new string starts with no JRNL header, go out
      pop: true  

  remark:
    - meta_scope: constant.character.pdb #meta.structure.dictionary.json.pdb
    - match: '[\s\t]+RESOLUTION.*$' #'[\s\t]+(?=RESOLUTION).*'
      scope: entity.name.pdb #string.unquoted.yaml.pdb
    - match: '.*(?=:)'
      push: remark_value
    - match: '((?!REMARK).)*$' #'(?!REMARK\b)\b.*'
      pop: true

  remark_value:
    - meta_scope: constant.character.pdb
    - match:  ':[\s\t]+NULL' #':([\s\t]+NULL[\s\t]+.*)+'
      #scope:  markup.deleted.pdb
      push: semicolon_NULL
    - match: ':'
      #scope: entity.name.pdb
      push: semicolon
    - match: '$'
      pop: true
  
  semicolon:
    - meta_scope: entity.name.pdb
    - match: '[\s\t]?;[\s\t]?'
      scope: constant.language.pdb
    - match: '$'
      pop: true

  semicolon_NULL:
    - meta_scope: markup.deleted.pdb
    - match: '[\s\t]?;[\s\t]?'
      scope: constant.language.pdb
    - match: '$'
      pop: true

  seqres:
    #different chanes should be coloured differently (focus on A-H)
    #don't care about colours for now, but they should be different
    - meta_scope: constant.character.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+A.*'
      scope: entity.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+B.*'
      scope: string.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+C.*'
      scope: markup.deleted.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+D.*'
      scope: storage.type.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+E.*'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+F.*'
      scope: variable.language.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+G.*'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+H.*'
      scope: comment.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+I.*'
      scope: entity.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+J.*'
      scope: string.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+K.*'
      scope: markup.deleted.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+L.*'
      scope: storage.type.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+M.*'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+N.*'
      scope: variable.language.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+O.*'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+P.*'
      scope: comment.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+Q.*'
      scope: entity.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+R.*'
      scope: string.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+S.*'
      scope: markup.deleted.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+T.*'
      scope: storage.type.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+U.*'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+V.*'
      scope: variable.language.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+W.*'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+X.*'
      scope: comment.name.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+Y.*'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+[0-9]+[\s\t]+Z.*'
      scope: comment.name.pdb                
    - match: '$'
      pop: true

  atom:
    - meta_scope: constant.character.pdb
    #residue number
    - match: '(?<=[A-Z])[\s\t]+[0-9]+'
      scope: storage.type.pdb
    #amino acids
    - match: '[\s\t]+[A-Z]{3}'
      #define colour scheme for aminoacids
      scope: markup.deleted.pdb
    #define chains (different colours for different chains from A-H)
    - match: '[\s\t]+A(?=[\s\t]+[0-9])'
      scope: entity.name.pdb
    - match: '[\s\t]+B(?=[\s\t]+[0-9])'
      scope: string.pdb
    - match: '[\s\t]+C(?=[\s\t]+[0-9])'
      scope: markup.deleted.pdb
    - match: '[\s\t]+D(?=[\s\t]+[0-9])'
      scope: storage.type.pdb
    - match: '[\s\t]+E(?=[\s\t]+[0-9])'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+F(?=[\s\t]+[0-9])'
      scope: variable.language.pdb
    - match: '[\s\t]+G(?=[\s\t]+[0-9])'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+H(?=[\s\t]+[0-9])'
      scope: comment.name.pdb
    - match: '[\s\t]+I(?=[\s\t]+[0-9])'
      scope: entity.name.pdb
    - match: '[\s\t]+J(?=[\s\t]+[0-9])'
      scope: string.pdb
    - match: '[\s\t]+K(?=[\s\t]+[0-9])'
      scope: markup.deleted.pdb
    - match: '[\s\t]+L(?=[\s\t]+[0-9])'
      scope: storage.type.pdb
    - match: '[\s\t]+M(?=[\s\t]+[0-9])'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+N(?=[\s\t]+[0-9])'
      scope: variable.language.pdb
    - match: '[\s\t]+O(?=[\s\t]+[0-9])'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+P(?=[\s\t]+[0-9])'
      scope: comment.name.pdb
    - match: '[\s\t]+Q(?=[\s\t]+[0-9])'
      scope: entity.name.pdb
    - match: '[\s\t]+R(?=[\s\t]+[0-9])'
      scope: string.pdb
    - match: '[\s\t]+S(?=[\s\t]+[0-9])'
      scope: markup.deleted.pdb
    - match: '[\s\t]+T(?=[\s\t]+[0-9])'
      scope: storage.type.pdb
    - match: '[\s\t]+U(?=[\s\t]+[0-9])'
      scope: entity.name.tag.pdb
    - match: '[\s\t]+V(?=[\s\t]+[0-9])'
      scope: variable.language.pdb
    - match: '[\s\t]+W(?=[\s\t]+[0-9])'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+X(?=[\s\t]+[0-9])'
      scope: comment.name.pdb
    - match: '[\s\t]+Y(?=[\s\t]+[0-9])'
      scope: string.unquoted.yaml.pdb
    - match: '[\s\t]+Z(?=[\s\t]+[0-9])'
      scope: comment.name.pdb
    - match: '$'
      pop: true

  
  #aa_chain_resnumber:
    #- meta_scope: string.pdb
    #- match: '[A-Z]{3}'
      #scope: storage.type.pdb'
    #- match: '[\s\t]+'
      #pop: true




