%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: sam
file_extensions:
  - sam
scope: source.sam
contexts:
  main:
    - match: '^@HD'
      scope: keyword.sam
      push: header_entry_hd
    - match: '^@SQ'
      scope: keyword.sam
      push: header_entry_sq
    - match: '^@RG'
      scope: keyword.sam
      push: header_entry_rg
    - match: '^@PG'
      scope: keyword.sam
      push: header_entry_pg
    - match: '^@CO'
      scope: keyword.sam
      push: header_entry_co
    - match: "^"
      scope: string.sam
      push: alignment_entry

  header_entry_hd:
    - meta_scope: string.sam
    - match: '(?<=[A-Z]{2}:)"'
      scope: invalid.sam
      push: header_entry_quote
    - match: '(?<=VN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=SO:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=GO:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '$'
      pop: true

  header_entry_sq:
    - meta_scope: string.sam
    - match: '(?<=[A-Z]{2}:)"'
      scope: invalid.sam
      push: header_entry_quote
    - match: '(?<=SN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=LN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=AH:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=AN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=AS:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=M5:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=SP:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=UR:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: $
      pop: true

  header_entry_rg:
    - meta_scope: string.sam
    - match: '(?<=[A-Z]{2}:)"'
      scope: invalid.sam
      push: header_entry_quote
    - match: '(?<=ID:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=CN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=DS:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=DT:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=FO:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=KS:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=LB:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PG:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PI:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PL:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PM:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PU:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=SM:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: $
      pop: true

  header_entry_pg:
    - meta_scope: string.sam
    - match: '(?<=[A-Z]{2}:)"'
      scope: invalid.sam
      push: header_entry_quote
    - match: '(?<=ID:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=CL:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=PP:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=DS:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: '(?<=VN:)(.+?(?=\s+[A-Z]{2}:)|.+$)'
      scope: invalid.sam
    - match: $
      pop: true

  header_entry_co:
    - meta_scope: string.sam
    - match: '(?<=[A-Z]{2}:)"'
      scope: invalid.sam
      push: header_entry_quote
    - match: $
      pop: true

  header_entry_quote:
    - meta_scope: invalid.sam
    - match: '"'
      pop: true

  alignment_entry: 
    - meta_scope: keyword.sam
    - match: "\t(?=([A-Z]{2}:.+:.+)\t)"
      scope: string.sam
      push: data_tag_entry
    - match: "\t(?=[ACGT]+\t)"
      push: nucleotide_sequence
    - match: "\t(?=([0-9]+[MIDNSHPX=])+\t)"
      push: cigar_str
    - match: "(?<=\t)=(?=\t)"
      scope: invalid.sam
    - match: "(?<=\t)[0-9]+(?=\t)"
      scope: invalid.sam
    - match: "\t(?=[!-~]+\t)"
      push: sequence_quality
    - match: "$"
      pop: true

  nucleotide_sequence:
    - meta_scope: string.sam
    - match: "A"
      scope: invalid.sam
    - match: "C"
      scope: invalid.sam
    - match: "G"
      scope: invalid.sam
    - match: "T"
      scope: invalid.sam
    - match: "(?=\t)"
      pop: true

  data_tag_entry: 
    - meta_scope: string.sam
    - match: "[A-Z]{2}(?=:)"
      scope: invalid.sam
    - match: "(?<=:).(?=:)"
      scope: invalid.sam
    - match: "(?<=:)(.+?(?=\t)|.+$)"
      scope: invalid.sam
    - match: "$"
      pop: true

  cigar_str:
    - meta_scope: string.sam
    - match: "\t"
      pop: true

  sequence_quality: 
    - meta_scope: string.sam
    - match: "!"
      scope: invalid.sam
    - match: "\""
      scope: invalid.sam
    - match: "#"
      scope: invalid.sam
    - match: "$"
      scope: invalid.sam
    - match: "%"
      scope: invalid.sam
    - match: "&"
      scope: invalid.sam
    - match: "\\'"
      scope: invalid.sam
    - match: "\\("
      scope: invalid.sam
    - match: "\\)"
      scope: invalid.sam
    - match: "\\*"
      scope: invalid.sam
    - match: "\\+"
      scope: invalid.sam
    - match: ","
      scope: invalid.sam
    - match: "-"
      scope: invalid.sam
    - match: "\\."
      scope: invalid.sam
    - match: "/"
      scope: invalid.sam
    - match: "0"
      scope: invalid.sam
    - match: "1"
      scope: invalid.sam
    - match: "2"
      scope: invalid.sam
    - match: "3"
      scope: invalid.sam
    - match: "4"
      scope: invalid.sam
    - match: "5"
      scope: invalid.sam
    - match: "6"
      scope: invalid.sam
    - match: "7"
      scope: invalid.sam
    - match: "8"
      scope: invalid.sam
    - match: "9"
      scope: invalid.sam
    - match: ":"
      scope: invalid.sam
    - match: ";"
      scope: invalid.sam
    - match: "<"
      scope: invalid.sam
    - match: "="
      scope: invalid.sam
    - match: ">"
      scope: invalid.sam
    - match: "\\?"
      scope: invalid.sam
    - match: "@"
      scope: invalid.sam
    - match: "A"
      scope: invalid.sam
    - match: "B"
      scope: invalid.sam
    - match: "C"
      scope: invalid.sam
    - match: "D"
      scope: invalid.sam
    - match: "E"
      scope: invalid.sam
    - match: "F"
      scope: invalid.sam
    - match: "G"
      scope: invalid.sam
    - match: "H"
      scope: invalid.sam
    - match: "I"
      scope: invalid.sam
    - match: "J"
      scope: invalid.sam
    - match: "K"
    #   scope: invalid.sam
    - match: "(?=\t)"
      pop: true